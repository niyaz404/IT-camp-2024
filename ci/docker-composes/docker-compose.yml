version: '3.4'

services:
  frontend:
    container_name: ${FRONT_HOST}
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/Frontend.Dockerfile
    environment:
      NODE_ENV: development
    ports:
      - "${FRONT_PORT}:80"
    networks:
      - itcamp_network
    volumes:
      - .:/app

  ml_service:
    container_name: ${ML_SERVICE_HOST}
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/MLService.Dockerfile
    environment:
      DOCKER_BUILDKIT: 1
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      INTERNAL_PORT: ${ML_SERVICE_PORT}
    ports:
      - "8080:8080"
    networks:
      - itcamp_network

  webapi_postgres:
    container_name: webapi_postgres_db
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "5432:5432"
    volumes:
      - webapi-postgres-data:/var/lib/postgresql/data
    networks:
      - itcamp_network

  webapi_migrator:
    container_name: webapi_migrator
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/PostgresMigrator.Dockerfile
    depends_on:
      - webapi_postgres
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - itcamp_network

  webapi:
    container_name: webapi
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/WebApi.Dockerfile
    environment:    
      FRONTEND_URL: http://${FRONT_HOST}:${FRONT_PORT}
      AUTH_SERVICE_URL: http://${AUTH_SERVICE_HOST}:${AUTH_SERVICE_PORT}
      REPORT_SERVICE_URL: http://${REPORT_SERVICE_HOST}:${REPORT_SERVICE_PORT}
      ML_SERVICE_URL: http://${ML_SERVICE_HOST}:8080
    ports:
      - "${BFF_PORT}:${BFF_PORT}"
    networks:
      - itcamp_network

  report_service:
    container_name: ${REPORT_SERVICE_HOST}
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/ReportService.Dockerfile
    ports:
      - "${REPORT_SERVICE_PORT}:${REPORT_SERVICE_PORT}"
    environment:
      CONNECTION_STRING: ${WEBAPI_CONNECTION_STRING}
    networks:
      - itcamp_network

  auth_service:
    container_name: ${AUTH_SERVICE_HOST}
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/AuthService.Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      CONNECTION_STRING: ${AUTH_CONNECTION_STRING}
    networks:
      - itcamp_network

  auth_postgres:
    container_name: auth_postgres_db
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/AuthPostgres.Dockerfile
      args:
        POSTGRES_DB: ${AUTH_POSTGRES_DB}
        POSTGRES_USER: ${AUTH_POSTGRES_USER}
        POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    networks:
      - itcamp_network

  auth_migrator:
    container_name: auth_migrator
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/AuthPostgresMigrator.Dockerfile
    depends_on:
      - auth_postgres
    environment:
      POSTGRES_HOST: ${AUTH_POSTGRES_HOST}
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    networks:
      - itcamp_network


volumes:
  webapi-postgres-data:  
  auth-postgres-data:

networks:
  itcamp_network:
    name: itcamp_network
    driver: bridge
